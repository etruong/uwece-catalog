{"version":3,"sources":["data/ece-catalog.csv","data/resistors.csv","HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomePage","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","categoryInput","inputValue","setState","error","path","history","push","handleKeyPress","event","console","log","target","charCode","state","inherits","createClass","key","value","restart","_this2","show","react_default","a","createElement","className","id","App_SearchInput","changeInput","query","match","App_CategoryInput","category","searchInput","changeCategory","onKeyPress","Component","App","withRouter","input","selectedCategory","generateCategories","categories","data","forEach","item","indexOf","Category","renderHomePage","routerProps","HomePage_HomePage","assign","renderSearchResults","App_SearchResults","admin","renderFooter","App_Footer","changeAdmin","currentState","renderResistor","App_Resistor","loading","d3","then","catalogData","firebase","database","ref","set","catch","message","BrowserRouter","basename","process","Route","component","Header","Switch","exact","render","Resistor","_this3","resistorValues","resistorValue","resistorData","Type","filterResistorData","filter","activeTab","toggle","bind","assertThisInitialized","tab","_this4","_this5","locator","Link","to","resistorTabLabel","reactstrap_es","tabs","classnames","active","tabId","App_ResistorSearch","App_ResistorContent","resistorContainer","react_scroll_up_button","ResistorSearch","_this6","generateResults","parseFloat","largeNum","toLowerCase","substring","length","matchData","itemValue","Value","range","sort","compare","createData","map","resistor","Cost","b","onChange","rangeChange","content","type","placeholder","aria-label","ResistorContent","starterKey","resistors","Footer","view","SearchResults","_this7","generateResultsData","filteredData","params","itemObjectKey","keys","found","noResults","_this8","header","items","App_ItemRow","Part","binHeader","ItemRow","inStock","messageStock","Instock","binInfo","Bin","Description","SearchInput","_Component9","apply","arguments","_this9","queryButton","disabled","aria-describedby","CategoryInput","_Component10","_this10","choices","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe96f95d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ece-catalog.d451f93d.csv\";","module.exports = __webpack_public_path__ + \"static/media/resistors.bc95a211.csv\";","import { BrowserRouter as Router, withRouter} from 'react-router-dom'\nimport React, { Component } from 'react';\nimport { SearchInput, CategoryInput } from './App.js';\n\nexport class HomePage extends Component {\n\n    constructor (props) {\n        super (props);\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount () {\n        this.props.restart ();\n    }\n\n    onClick = () => {\n        if (this.props.categoryInput == \"none\" && this.props.inputValue == \"\") {\n            this.setState ({error: true});\n        } else {\n            this.setState ({error: false});\n            let path = \"/searchresults=\" + this.props.inputValue;\n            if (this.props.categoryInput != \"none\") {\n                path = \"/category=\" +this.props.categoryInput;\n            }\n            this.props.history.push(path);\n        }\n    }\n\n    handleKeyPress = (event) => {\n        console.log (event);\n        if (event.target.charCode == 13) {\n            console.log (\"enter\")\n            if (this.props.categoryInput == \"none\" && this.props.inputValue == \"\") {\n                this.setState ({error: true});\n            } else {\n                this.setState ({error: false});\n                let path = \"/searchresults=\" + this.props.inputValue;\n                if (this.props.categoryInput != \"none\") {\n                    path = \"/category=\" +this.props.categoryInput;\n                }\n                this.props.history.push(path);\n            }\n        }\n    }\n\n    render () {\n        let show = \"d-none\";\n        if (this.state.error) {\n            show = \"\";\n        }\n\n        return (\n        <main className=\"container\">\n            <section id=\"search-home\">\n                <p id=\"alert\" className={\"alert alert-danger text-center \" + show}>Please type in what your are trying to find OR select a category.</p>\n                <SearchInput \n                    changeInput={(query) => this.props.changeInput (query)} \n                    inputValue={this.props.inputValue}\n                    categoryInput={this.props.categoryInput}\n                    path={this.props.match} />\n                <p className=\"text-center\">or</p>\n                <CategoryInput \n                    category={this.props.category} \n                    searchInput={this.props.inputValue}\n                    categoryInput={this.props.categoryInput}\n                    changeCategory={(category) => this.props.changeCategory(category)} />\n                <button onClick={this.onClick} onKeyPress={this.handleKeyPress} id=\"search-btn\" className=\"btn btn-outline-primary btn-block\">Search</button>\n                {/* <p className=\"text-center mt-3 text-secondary small\">\n                    Note: To view the resistor values we have, please select the <em>Resistors</em>\n                    category and then the search button. This will download a resistor catalog file.\n                </p> */}\n            </section>\n        </main>\n        );\n\n    }\n\n}\n\nexport default withRouter (HomePage);\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as d3 from \"d3\";\nimport data from './data/ece-catalog.csv';\nimport resistorData from './data/resistors.csv';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport classnames from 'classnames';\nimport './App.css';\nimport { TinyButton as ScrollUpButton } from \"react-scroll-up-button\"; //Add this line Here\n\nimport { HomePage } from './HomePage.js'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loading: true,\n      error: null,\n      query: \"\",\n      category: \"none\",\n      admin: false\n    }\n  }\n\n  componentDidMount() {\n\n    d3.csv(data)\n      .then((catalogData) => {\n        this.setState({ data: catalogData, loading: false });\n        firebase.database().ref('catalog')\n          .set(catalogData)\n          .catch((error) => {\n            this.setState({ error: error.message });\n          });\n\n      })\n      .catch((error) => {\n        this.setState({ error: error.message, loading: false });\n      });\n  }\n\n  restart = () => {\n    this.setState({ query: \"\", category: \"none\" });\n  }\n\n  changeInput = (input) => {\n    this.setState({ query: input });\n  }\n\n  changeCategory = (selectedCategory) => {\n    this.setState({ category: selectedCategory });\n  }\n\n  generateCategories = () => {\n\n    let categories = [\"Resistors\"];\n    if (this.state.data) {\n      this.state.data.forEach((item) => {\n        if (categories.indexOf(item.Category) === -1) {\n          categories.push(item.Category)\n        }\n      });\n    }\n    return (categories);\n\n  }\n\n  renderHomePage = (routerProps) => {\n    return (\n      <HomePage\n        {...routerProps}\n        category={this.generateCategories()}\n        changeInput={this.changeInput}\n        inputValue={this.state.query}\n        categoryInput={this.state.category}\n        changeCategory={this.changeCategory}\n        restart={this.restart} />\n    );\n  }\n\n  renderSearchResults = (routerProps) => {\n    return (\n      <SearchResults\n        {...routerProps}\n        admin={this.state.admin}\n        data={this.state.data}\n        changeInput={this.changeInput}\n        inputValue={this.state.query}\n        categoryInput={this.state.category}\n        restart={this.restart} />\n    );\n  }\n\n  renderFooter = (routerProps) => {\n    return (\n      <Footer\n        {...routerProps}\n        admin={this.state.admin}\n        changeAdmin={this.changeAdmin} />\n    );\n  }\n\n  changeAdmin = () => {\n    this.setState((currentState) => {\n      return ({ admin: !currentState.admin });\n    });\n  }\n\n  renderResistor = (routerProps) => {\n    return (\n      <Resistor\n        {...routerProps}\n        changeInput={this.changeInput}\n        inputValue={this.state.query}\n        categoryInput={this.state.category}\n      />\n    );\n  }\n\n  render() {\n    if (!this.state.loading && !this.state.error) {\n      return (\n        <Router basename={process.env.PUBLIC_URL + '/'}>\n          <div>\n            <Route path=\"/\" component={Header} />\n            <Switch>\n              <Route exact path=\"/\" render={this.renderHomePage} />\n              <Route exact path=\"/searchresults=:query\" render={this.renderSearchResults} />\n              <Route exact path=\"/category=resistors\" render={this.renderResistor} />\n              <Route exact path=\"/category=:category\" render={this.renderSearchResults} />\n            </Switch>\n            <Route path=\"/\" render={this.renderFooter} />\n          </div>\n\n        </Router>\n      );\n    } else if (this.state.error) {\n      return (<p className=\"alert alert-danger text-center\">{this.state.error}</p>)\n    } else {\n      return (\n        <p>Loading Content</p>\n      );\n    }\n  }\n}\n\nexport default App;\n\nclass Resistor extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      resistorData: [],\n      loading: true,\n      activeTab: '1',\n      error: null\n    }\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  componentDidMount() {\n    d3.csv(resistorData)\n      .then((data) => {\n        this.setState({ resistorData: data, loading: false });\n      })\n      .catch((error) => {\n        this.setState ({error: error.message, loading: false});\n      });\n  }\n\n  resistorValues = () => {\n    let resistorValue = [];\n    this.state.resistorData.forEach((item) => {\n      if (resistorValue.indexOf(item.Type) == -1) {\n        resistorValue.push(item.Type);\n      }\n    });\n    return (resistorValue);\n  }\n\n  filterResistorData = (filter) => {\n    let specificResistor = this.state.resistorData.filter((item) => {\n      return (item.Type == filter);\n    });\n    return (specificResistor);\n  }\n\n  render() {\n\n    if (this.state.loading) {\n      return (<p className=\"alert alert-warning text-center\">Loading Content...</p>);\n    } else if (this.state.error) {\n      return (<p className=\"alert alert-danger text-center\">{this.state.error}</p>)\n    } else {\n\n      let locator = <p><Link to=\"/\">Home</Link> &gt; Resistors</p>;\n\n      let resistorTabLabel = this.resistorValues();\n\n      return (\n        <div className=\"container\">\n          {locator}\n          <SearchInput\n            changeInput={(query) => this.props.changeInput(query)}\n            inputValue={this.props.inputValue}\n            categoryInput={\"none\"}\n            path={this.props.match} />\n          <h2 className=\"text-center\">Resistors</h2>\n          <Nav tabs>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"1\" })}\n                onClick={() => { this.toggle(\"1\"); }}\n              >\n                Search for a Resistor\n                </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"2\" })}\n                onClick={() => { this.toggle(\"2\"); }}\n              >\n                {resistorTabLabel[0]}\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"3\" })}\n                onClick={() => { this.toggle(\"3\"); }}\n              >\n                {resistorTabLabel[1]}\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"4\" })}\n                onClick={() => { this.toggle(\"4\"); }}\n              >\n                {resistorTabLabel[2]}\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"5\" })}\n                onClick={() => { this.toggle(\"5\"); }}\n              >\n                {resistorTabLabel[3]}\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"6\" })}\n                onClick={() => { this.toggle(\"6\"); }}\n              >\n                {resistorTabLabel[4]}\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"7\" })}\n                onClick={() => { this.toggle(\"7\"); }}\n              >\n                {resistorTabLabel[5]}\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={this.state.activeTab}>\n            <TabPane tabId=\"1\">\n              <ResistorSearch resistorData={this.state.resistorData} />\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <ResistorContent resistorData={this.filterResistorData(\"1%, 1/4W\")} resistorContainer=\"resistor-container\" />\n            </TabPane>\n            <TabPane tabId=\"3\">\n              <ResistorContent resistorData={this.filterResistorData(\"5%, 1/4W\")} resistorContainer=\"resistor-container-5-14\" />\n            </TabPane>\n            <TabPane tabId=\"4\">\n              <ResistorContent resistorData={this.filterResistorData(\"5%, 1/2W\")} resistorContainer=\"resistor-container-5-12\" />\n            </TabPane>\n            <TabPane tabId=\"5\">\n              <ResistorContent resistorData={this.filterResistorData(\"5%, 1W\")} resistorContainer=\"resistor-container-5-1\" />\n            </TabPane>\n            <TabPane tabId=\"6\">\n              <ResistorContent resistorData={this.filterResistorData(\"5%, 2W\")} resistorContainer=\"resistor-container-5-2\" />\n            </TabPane>\n            <TabPane tabId=\"7\">\n              <ResistorContent resistorData={this.filterResistorData(\"5%, 5W\")} resistorContainer=\"resistor-container-5-5\" />\n            </TabPane>\n          </TabContent>\n          <ScrollUpButton />\n        </div>\n      );\n    }\n\n  }\n\n}\n\nclass ResistorSearch extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      range: 1.5\n    }\n  }\n\n  generateResults = () => {\n    let query = parseFloat(this.state.query);\n\n    let largeNum = \"\";\n    if (this.state.query.toLowerCase().indexOf(\"k\") != -1 || this.state.query.toLowerCase().indexOf(\"m\") != -1) {\n      largeNum = this.state.query.toLowerCase().substring(this.state.query.length - 1);\n    }\n\n    let matchData = this.props.resistorData.filter((item) => {\n      let match = false;\n      let itemValue = parseFloat(item.Value);\n      if (query == itemValue || (query > itemValue - this.state.range && query < itemValue + this.state.range)) {\n        if (largeNum != \"\") {\n          if (item.Value.toLowerCase().substring(item.Value.length - 1) == largeNum) {\n            match = true;\n          }\n        } else {\n          if (item.Value.toLowerCase().substring(item.Value.length - 1) != \"m\" && item.Value.toLowerCase().substring(item.Value.length - 1) != \"k\") {\n            match = true;\n          }\n        }\n      }\n      return (match);\n    });\n\n    matchData = matchData.sort(this.compare)\n\n    return (matchData)\n  }\n\n  createData = () => {\n    let resistorRow = this.generateResults().map((resistor) => {\n      return (\n        <tr key={resistor.Value + \" \" + resistor.Type}>\n          <td>{resistor.Type}</td>\n          <td>{resistor.Value}</td>\n          <td>{resistor.Cost}</td>\n        </tr>\n      );\n    });\n\n    return (resistorRow);\n  }\n\n  compare = (a, b) => {\n    return (parseFloat(a.Value) - parseFloat(b.Value));\n  }\n\n  onChange = (event) => {\n    this.setState({ query: event.target.value });\n  }\n\n  rangeChange = (event) => {\n    this.setState({ range: parseFloat(event.target.value) })\n  }\n\n  render() {\n    let content = null;\n    if (this.state.query != \"\") {\n      if (this.createData().length == 0) {\n        content = (\n          <p className=\"alert alert-danger text-center\">No resistor with that value</p>\n        );\n      } else {\n        content = (\n          <table className=\"table table-striped resistor-table\">\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Value</th>\n                <th>Cost</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.createData()}\n            </tbody>\n          </table>\n        );\n      }\n    }\n\n    return (\n      <div>\n        <h3 className=\"text-center mt-3\">Search for a Resistor</h3>\n        <p className=\"text-center mt-3 text-secondary small\">(Finds resistor within {this.state.range}ohms range)</p>\n        <div className=\"input-group mb-3 minimize\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Resistance Value: </span>\n          </div>\n          <input onChange={this.onChange} value={this.state.query} type=\"text\" className=\"form-control\" placeholder=\"Insert resistance\" aria-label=\"Resistor search input\" />\n          {/* <div class=\"input-group-append\">\n            <span class=\"input-group-text\">Find Resistor within range:</span>\n          </div>\n          <input onChange={this.rangeChange} value={this.state.range} type=\"text\" className=\"form-control\" placeholder=\"Specify range\" aria-label=\"Resistor search input\" /> */}\n        </div>\n        {content}\n      </div>\n    );\n  }\n\n}\n\nclass ResistorContent extends Component {\n\n  render() {\n    let starterKey = 0;\n    let resistors = this.props.resistorData.map((item) => {\n      starterKey++;\n      return (<div className=\"resistor p-3 border text-center\" key={starterKey}>{item.Value}</div>)\n    });\n    return (\n      <div>\n        <div className=\"sticky-top p-2 stick\">\n          <h3 className=\"text-center mt-3 mb-3\">{this.props.resistorData[0].Type + \" Resistor\"}</h3>\n          <p className=\"text-center font-weight-light\">Cost: [ {this.props.resistorData[0].Cost} ]</p>\n        </div>\n        <div className={\"d-flex flex-wrap flex-column mt-3 \" + this.props.resistorContainer}>\n          {resistors}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nclass Footer extends Component {\n\n  render() {\n    let view = \"Student\";\n    if (this.props.admin) {\n      view = \"Admin\"\n    }\n    return (\n      <div className=\"text-center mt-3 text-secondary small\">\n        <p>Updated: December 2018</p>\n        <p onClick={this.props.changeAdmin}>{view} View</p>\n      </div>\n    );\n  }\n\n}\n\nclass SearchResults extends Component {\n\n  constructor(props) {\n    super(props);\n    this.noResults = false;\n  }\n\n  generateResultsData = () => {\n    let filteredData = this.props.data;\n    if (this.props.match.path != \"/category=:category\" && this.props.match.params.query == \"ALLPARTS\") {\n      return (filteredData);\n    }\n\n    if (this.props.match.path == \"/category=:category\") {\n      filteredData = filteredData.filter((item) => {\n        return (item.Category == this.props.match.params.category);\n      });\n    } else { // this.props.match.path != \"/category=:category\"\n      filteredData = filteredData.filter((item) => {\n        let itemObjectKey = Object.keys(item);\n        let found = false;\n\n        itemObjectKey.forEach((key) => {\n          if (item[key].toLowerCase().indexOf(this.props.match.params.query.toLowerCase()) != -1) {\n            found = true;\n          }\n        });\n        return (found);\n      });\n    }\n\n    if (filteredData.length == 0) {\n      this.noResults = true;\n    } else {\n      this.noResults = false;\n    }\n\n    return (filteredData);\n  }\n\n  render() {\n    let locator = <p><Link to=\"/\">Home</Link> &gt; Search results for: {this.props.match.params.query}</p>;\n    let header = \"Search results for: \" + this.props.match.params.query;\n    if (this.props.match.path == \"/category=:category\") {\n      locator = <p><Link to=\"/\">Home</Link> &gt; {this.props.match.params.category}</p>;\n      header = this.props.match.params.category;\n    }\n    if (this.props.match.params.query == \"ALLPARTS\") {\n      header = \"All Parts\";\n      locator = <p><Link to=\"/\">Home</Link> &gt; All Parts</p>;\n    }\n\n    let items = this.generateResultsData().map((item) => {\n      return (<ItemRow key={item.Part} item={item} admin={this.props.admin} />);\n    });\n\n    let binHeader = null;\n    if (this.props.admin) {\n      binHeader = <th>Bin #</th>;\n    }\n\n    let content = null;\n    if (this.noResults) {\n      content = <p className=\"alert alert-danger text-center m-3\">No Results found</p>\n    } else {\n      content = (\n        <table className=\"table table-striped mt-3\">\n          <thead>\n            <tr>\n              {binHeader}\n              <th>ID / Part #</th>\n              <th>Description</th>\n              <th>Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items}\n          </tbody>\n        </table>\n      );\n    }\n\n    return (\n      <main className=\"container\">\n        <section id=\"search-results\">\n          {locator}\n          <SearchInput\n            changeInput={(query) => this.props.changeInput(query)}\n            inputValue={this.props.inputValue}\n            categoryInput={\"none\"}\n            path={this.props.match} />\n          <h2 className=\"text-center\">{header}</h2>\n\n          {content}\n        </section>\n        <ScrollUpButton />\n      </main>\n    );\n\n  }\n\n}\n\nclass ItemRow extends Component {\n\n  render() {\n    let inStock = \"\";\n    let messageStock = \"\";\n    if (this.props.item.Instock == \"FALSE\") {\n      inStock = \"text-danger\";\n      messageStock = \"**CURRENTLY OUT OF STOCK**\"\n    }\n\n    let binInfo = null;\n    if (this.props.admin) {\n      binInfo = <td>{this.props.item.Bin}</td>;\n    }\n\n    return (\n      <tr className={inStock}>\n        {binInfo}\n        <th>{this.props.item.Part}</th>\n        <td>{this.props.item.Description + \" \" + messageStock}</td>\n        <td>{this.props.item.Cost}</td>\n      </tr>\n    );\n  }\n\n}\n\nclass Header extends Component {\n\n  render() {\n\n    return (\n      <header className=\"jumbotron jumbotron-fluid bg-warning text-center\">\n        <Link to=\"/\">\n          <p className=\"lead\">University of Washington</p>\n          <h1 className=\"text-center\">ECE Store Catalog</h1>\n        </Link>\n      </header>\n    );\n  }\n\n}\n\nexport class SearchInput extends Component {\n\n  render() {\n    let queryButton = null;\n    let disabled = false;\n    if (this.props.path.path == \"/\") {\n      if (this.props.categoryInput && this.props.categoryInput != \"none\") {\n        disabled = true;\n      }\n    } else {\n      if (this.props.inputValue == \"\") {\n        queryButton = (\n          <div className=\"input-group-append\">\n            <Link to={\"/searchresults=ALLPARTS\"}><button id=\"search-btn\" className=\"btn btn-outline-secondary\">Search</button></Link>\n          </div>\n        );\n      } else {\n        queryButton = (\n          <div className=\"input-group-append\">\n            <Link to={\"/searchresults=\" + this.props.inputValue}><button id=\"search-btn\" type=\"submit\" className=\"btn btn-outline-secondary\">Search</button></Link>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <label className=\"input-group-text\">Searching for</label>\n        </div>\n        <input onChange={(event) => this.props.changeInput(event.target.value)}\n          value={this.props.inputValue}\n          type=\"text\" className=\"form-control\"\n          placeholder=\"Type here\"\n          aria-label=\"search input\"\n          aria-describedby=\"search item\"\n          disabled={disabled} />\n        {queryButton}\n      </div>\n    );\n\n  }\n\n}\n\nexport class CategoryInput extends Component {\n\n  render() {\n\n    let choices = this.props.category.map((category) => {\n      return (<option key={category} value={category}>{category}</option>);\n    });\n\n    let disabled = false;\n    if (this.props.searchInput != \"\") {\n      disabled = true;\n    }\n\n    return (\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <label className=\"input-group-text\">Search by Category</label>\n        </div>\n        <select\n          onChange={(event) => this.props.changeCategory(event.target.value)}\n          value={this.props.categoryInput}\n          disabled={disabled}\n          className=\"custom-select\"\n          id=\"chooseCategory\">\n          <option value=\"none\">Choose...</option>\n          {choices}\n        </select>\n      </div>\n    );\n\n  }\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase/app';\n\nvar config = {\n    apiKey: \"AIzaSyBo1MhWiGnO2NeXB-RLn2BPgCW7R57_VxI\",\n    authDomain: \"ece-catalog.firebaseapp.com\",\n    databaseURL: \"https://ece-catalog.firebaseio.com\",\n    projectId: \"ece-catalog\",\n    storageBucket: \"ece-catalog.appspot.com\",\n    messagingSenderId: \"123150456410\"\n  };\n  firebase.initializeApp(config);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}