{"version":3,"sources":["data/ece-catalog.csv","data/resistors.csv","HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomePage","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","categoryInput","inputValue","setState","error","path","history","push","state","inherits","createClass","key","value","restart","_this2","show","react_default","a","createElement","className","id","App_SearchInput","changeInput","query","match","App_CategoryInput","category","searchInput","changeCategory","Component","App","withRouter","input","console","log","selectedCategory","generateCategories","categories","data","forEach","item","indexOf","Category","renderHomePage","routerProps","HomePage_HomePage","assign","renderSearchResults","App_SearchResults","admin","renderFooter","App_Footer","changeAdmin","currentState","renderResistor","App_Resistor","loading","d3","then","catalogData","firebase","database","ref","set","catch","message","BrowserRouter","basename","process","Route","component","Header","Switch","exact","render","Resistor","_this3","resistorValues","resistorValue","resistorData","Type","filterResistorData","filter","activeTab","toggle","bind","assertThisInitialized","tab","_this4","_this5","locator","Link","to","resistorTabLabel","reactstrap_es","tabs","classnames","active","tabId","App_ResistorSearch","App_ResistorContent","resistorContainer","react_scroll_up_button","ResistorSearch","_this6","generateResults","parseFloat","largeNum","toLowerCase","substring","length","matchData","itemValue","Value","range","sort","compare","createData","map","resistor","Cost","b","onChange","event","target","rangeChange","content","type","placeholder","aria-label","ResistorContent","resistors","Footer","view","SearchResults","_this7","generateResultsData","filteredData","params","itemObjectKey","keys","found","noResults","_this8","header","items","App_ItemRow","Part","binHeader","ItemRow","inStock","Instock","binInfo","Bin","Description","SearchInput","_Component9","apply","arguments","_this9","queryButton","disabled","aria-describedby","CategoryInput","_Component10","_this10","choices","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91f60d64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ece-catalog.d451f93d.csv\";","module.exports = __webpack_public_path__ + \"static/media/resistors.bc95a211.csv\";","import { BrowserRouter as Router, Route, Switch, Link, withRouter} from 'react-router-dom'\nimport React, { Component } from 'react';\nimport { SearchInput, CategoryInput } from './App.js';\n\nexport class HomePage extends Component {\n\n    constructor (props) {\n        super (props);\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount () {\n        this.props.restart ();\n    }\n\n    onClick = () => {\n        if (this.props.categoryInput == \"none\" && this.props.inputValue == \"\") {\n            this.setState ({error: true});\n        } else {\n            this.setState ({error: false});\n            let path = \"/searchresults=\" + this.props.inputValue;\n            if (this.props.categoryInput != \"none\") {\n                path = \"/category=\" +this.props.categoryInput;\n            }\n            this.props.history.push(path);\n        }\n    }\n\n    render () {\n        let show = \"d-none\";\n        if (this.state.error) {\n            show = \"\";\n        }\n\n        return (\n        <main className=\"container\">\n            <section id=\"search-home\">\n                <p id=\"alert\" className={\"alert alert-danger text-center \" + show}>Please type in what your are trying to find OR select a category.</p>\n                <SearchInput \n                    changeInput={(query) => this.props.changeInput (query)} \n                    inputValue={this.props.inputValue}\n                    categoryInput={this.props.categoryInput}\n                    path={this.props.match} />\n                <p className=\"text-center\">or</p>\n                <CategoryInput \n                    category={this.props.category} \n                    searchInput={this.props.inputValue}\n                    categoryInput={this.props.categoryInput}\n                    changeCategory={(category) => this.props.changeCategory(category)} />\n                <button onClick={this.onClick} id=\"search-btn\" className=\"btn btn-outline-primary btn-block\">Search</button>\n                {/* <p className=\"text-center mt-3 text-secondary small\">\n                    Note: To view the resistor values we have, please select the <em>Resistors</em>\n                    category and then the search button. This will download a resistor catalog file.\n                </p> */}\n            </section>\n        </main>\n        );\n\n    }\n\n}\n\nexport default withRouter (HomePage);\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as d3 from \"d3\";\nimport data from './data/ece-catalog.csv';\nimport resistorData from './data/resistors.csv';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport { BrowserRouter as Router, Route, Switch, Link, withRouter } from 'react-router-dom'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport './App.css';\nimport {TinyButton as ScrollUpButton} from \"react-scroll-up-button\"; //Add this line Here\n\nimport { HomePage } from './HomePage.js'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loading: true,\n      error: \"\",\n      query: \"\",\n      category: \"none\",\n      admin: false\n    }\n  }\n\n  componentDidMount() {\n\n    d3.csv(data)\n      .then((catalogData) => {\n        console.log(catalogData);\n        this.setState({ data: catalogData, loading: false });\n        firebase.database().ref('catalog')\n          .set(catalogData)\n          .catch((error) => {\n            console.log(error);\n          });\n\n      })\n      .catch((error) => {\n        this.setState({ error: error.message });\n        console.log(error);\n      });\n  }\n\n  restart = () => {\n    this.setState({ query: \"\", category: \"none\" });\n  }\n\n  changeInput = (input) => {\n    this.setState({ query: input });\n    console.log(input)\n  }\n\n  changeCategory = (selectedCategory) => {\n    console.log(selectedCategory)\n    this.setState({ category: selectedCategory });\n  }\n\n  generateCategories = () => {\n\n    let categories = [\"Resistors\"];\n    if (this.state.data) {\n      this.state.data.forEach((item) => {\n        if (categories.indexOf(item.Category) === -1) {\n          categories.push(item.Category)\n        }\n      });\n    }\n    return (categories);\n\n  }\n\n  renderHomePage = (routerProps) => {\n    return (\n      <HomePage\n        {...routerProps}\n        category={this.generateCategories()}\n        changeInput={this.changeInput}\n        inputValue={this.state.query}\n        categoryInput={this.state.category}\n        changeCategory={this.changeCategory}\n        restart={this.restart} />\n    );\n  }\n\n  renderSearchResults = (routerProps) => {\n    return (\n      <SearchResults\n        {...routerProps}\n        admin={this.state.admin}\n        data={this.state.data}\n        changeInput={this.changeInput}\n        inputValue={this.state.query}\n        categoryInput={this.state.category}\n        restart={this.restart} />\n    );\n  }\n\n  renderFooter = (routerProps) => {\n    return (\n      <Footer\n        {...routerProps}\n        admin={this.state.admin}\n        changeAdmin={this.changeAdmin} />\n    );\n  }\n\n  changeAdmin = () => {\n    this.setState((currentState) => {\n      return ({ admin: !currentState.admin });\n    });\n  }\n\n  renderResistor = (routerProps) => {\n    return (\n      <Resistor \n        {...routerProps}\n        changeInput={this.changeInput}\n        inputValue={this.state.query}\n        categoryInput={this.state.category}\n         />\n    );\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return (\n        <Router basename={process.env.PUBLIC_URL + '/'}>\n          <div>\n            <Route path=\"/\" component={Header} />\n            <Switch>\n              <Route exact path=\"/\" render={this.renderHomePage} />\n              <Route exact path=\"/searchresults=:query\" render={this.renderSearchResults} />\n              <Route exact path=\"/category=resistors\" render={this.renderResistor} />\n              <Route exact path=\"/category=:category\" render={this.renderSearchResults} />\n            </Switch>\n            <Route path=\"/\" render={this.renderFooter} />\n          </div>\n\n        </Router>\n      );\n    } else {\n      return (\n        <p>Loading Content</p>\n      );\n    }\n  }\n}\n\nexport default App;\n\nclass Resistor extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      resistorData: [],\n      loading: true,\n      activeTab: '1'\n    }\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  componentDidMount() {\n    d3.csv(resistorData)\n      .then((data) => {\n        this.setState({ resistorData: data, loading: false });\n        console.log(data);\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  }\n\n  resistorValues = () => {\n    let resistorValue = [];\n    this.state.resistorData.forEach((item) => {\n      if (resistorValue.indexOf(item.Type) == -1) {\n        resistorValue.push(item.Type);\n      }\n    });\n    return (resistorValue);\n  }\n\n  filterResistorData = (filter) => {\n    let specificResistor = this.state.resistorData.filter((item) => {\n      return (item.Type == filter);\n    });\n    return (specificResistor);\n  }\n\n  render() {\n\n    if (this.state.loading) {\n      return (null);\n    } else {\n\n      let locator = <p><Link to=\"/\">Home</Link> &gt; Resistors</p>;\n\n      let resistorTabLabel = this.resistorValues();\n      let tabCount = 0;\n\n      return (\n        <div className=\"container\">\n          {locator}\n          <SearchInput\n              changeInput={(query) => this.props.changeInput(query)}\n              inputValue={this.props.inputValue}\n              categoryInput={\"none\"}\n              path={this.props.match} />\n          <h2 className=\"text-center\">Resistors</h2>\n          <Nav tabs>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"1\" })}\n                onClick={() => { this.toggle(\"1\"); }}\n              >\n                Search for a Resistor\n                </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"2\" })}\n                onClick={() => { this.toggle(\"2\"); }}\n              >\n                {resistorTabLabel[0]}\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"3\" })}\n                onClick={() => { this.toggle(\"3\"); }}\n              >\n                {resistorTabLabel[1]}\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"4\" })}\n                onClick={() => { this.toggle(\"4\"); }}\n              >\n                {resistorTabLabel[2]}\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"5\" })}\n                onClick={() => { this.toggle(\"5\"); }}\n              >\n                {resistorTabLabel[3]}\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"6\" })}\n                onClick={() => { this.toggle(\"6\"); }}\n              >\n                {resistorTabLabel[4]}\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"7\" })}\n                onClick={() => { this.toggle(\"7\"); }}\n              >\n                {resistorTabLabel[5]}\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={this.state.activeTab}>\n            <TabPane tabId=\"1\">\n              <ResistorSearch resistorData={this.state.resistorData} />\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <ResistorContent resistorData={this.filterResistorData(\"1%, 1/4W\")} resistorContainer=\"resistor-container\" />\n            </TabPane>\n            <TabPane tabId=\"3\">\n              <ResistorContent resistorData={this.filterResistorData(\"5%, 1/4W\")} resistorContainer=\"resistor-container-5-14\" />\n            </TabPane>\n            <TabPane tabId=\"4\">\n              <ResistorContent resistorData={this.filterResistorData(\"5%, 1/2W\")} resistorContainer=\"resistor-container-5-12\" />\n            </TabPane>\n            <TabPane tabId=\"5\">\n              <ResistorContent resistorData={this.filterResistorData(\"5%, 1W\")} resistorContainer=\"resistor-container-5-1\" />\n            </TabPane>\n            <TabPane tabId=\"6\">\n              <ResistorContent resistorData={this.filterResistorData(\"5%, 2W\")} resistorContainer=\"resistor-container-5-2\" />\n            </TabPane>\n            <TabPane tabId=\"7\">\n              <ResistorContent resistorData={this.filterResistorData(\"5%, 5W\")} resistorContainer=\"resistor-container-5-5\" />\n            </TabPane>\n          </TabContent>\n          <ScrollUpButton />\n        </div>\n      );\n    }\n\n  }\n\n}\n\nclass ResistorSearch extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      range: 1.5\n    }\n  }\n\n  generateResults = () => {\n    let query = parseFloat(this.state.query);\n\n    let largeNum = \"\";\n    if (this.state.query.toLowerCase().indexOf(\"k\") != -1 || this.state.query.toLowerCase().indexOf(\"m\") != -1) {\n      largeNum = this.state.query.toLowerCase().substring(this.state.query.length - 1);\n    }\n\n    let matchData = this.props.resistorData.filter((item) => {\n      let match = false;\n      let itemValue = parseFloat(item.Value);\n      if (query == itemValue || (query > itemValue - this.state.range && query < itemValue + this.state.range)) {\n        if (largeNum != \"\") {\n          if (item.Value.toLowerCase().substring(item.Value.length - 1) == largeNum) {\n            match = true;\n          }\n        } else {\n          if (item.Value.toLowerCase().substring(item.Value.length - 1) != \"m\" && item.Value.toLowerCase().substring(item.Value.length - 1) != \"k\") {\n            match = true;\n          }\n        }\n      }\n      return (match);\n    });\n\n    matchData = matchData.sort(this.compare)\n\n    return (matchData)\n  }\n\n  createData = () => {\n    let resistorRow = this.generateResults().map((resistor) => {\n      return (\n        <tr key={resistor.Value + \" \" + resistor.Type}>\n          <td>{resistor.Type}</td>\n          <td>{resistor.Value}</td>\n          <td>{resistor.Cost}</td>\n        </tr>\n      );\n    });\n\n    return (resistorRow);\n  }\n\n  compare = (a, b) => {\n    return (parseFloat(a.Value) - parseFloat(b.Value));\n  }\n\n  onChange = (event) => {\n    this.setState({ query: event.target.value });\n  }\n\n  rangeChange = (event) => {\n    this.setState({ range: parseFloat(event.target.value) })\n  }\n\n  render() {\n    let content = null;\n    if (this.state.query != \"\") {\n      if (this.createData().length == 0) {\n        content = (\n          <p className=\"alert alert-danger text-center\">No resistor with that value</p>\n        );\n      } else {\n        content = (\n          <table className=\"table table-striped resistor-table\">\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Value</th>\n                <th>Cost</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.createData()}\n            </tbody>\n          </table>\n        );\n      }\n    }\n\n    return (\n      <div>\n        <h3 className=\"text-center mt-3\">Search for a Resistor</h3>\n        <p className=\"text-center mt-3 text-secondary small\">(Finds resistor within {this.state.range}ohms range)</p>\n        <div className=\"input-group mb-3 minimize\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Resistance Value: </span>\n          </div>\n          <input onChange={this.onChange} value={this.state.query} type=\"text\" className=\"form-control\" placeholder=\"Insert resistance\" aria-label=\"Resistor search input\" />\n          {/* <div class=\"input-group-append\">\n            <span class=\"input-group-text\">Find Resistor within range:</span>\n          </div>\n          <input onChange={this.rangeChange} value={this.state.range} type=\"text\" className=\"form-control\" placeholder=\"Specify range\" aria-label=\"Resistor search input\" /> */}\n        </div>\n        {content}\n      </div>\n    );\n  }\n\n}\n\nclass ResistorContent extends Component {\n\n  render() {\n    let resistors = this.props.resistorData.map((item) => {\n      return (<div className=\"resistor p-3 border text-center\" key={item.Value}>{item.Value}</div>)\n    });\n    return (\n      <div>\n        <h3 className=\"text-center mt-3 mb-3\">{this.props.resistorData[0].Type + \" Resistor\"}</h3>\n        <p className=\"text-center font-weight-light\">Cost: [ {this.props.resistorData[0].Cost} ]</p>\n        <div className={\"d-flex flex-wrap flex-column mt-3 \" + this.props.resistorContainer}>\n          {resistors}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nclass Footer extends Component {\n\n  render() {\n    let view = \"Student\";\n    if (this.props.admin) {\n      view = \"Admin\"\n    }\n    return (\n      <div className=\"text-center mt-3 text-secondary small\">\n        <p>Updated: December 2018</p>\n        <p onClick={this.props.changeAdmin}>{view} View</p>\n      </div>\n    );\n  }\n\n}\n\nclass SearchResults extends Component {\n\n  constructor(props) {\n    super(props);\n    this.noResults = false;\n  }\n\n  generateResultsData = () => {\n    let filteredData = this.props.data;\n    if (this.props.match.path != \"/category=:category\" && this.props.match.params.query == \"ALLPARTS\") {\n      return (filteredData);\n    }\n\n    if (this.props.match.path == \"/category=:category\") {\n      filteredData = filteredData.filter((item) => {\n        return (item.Category == this.props.match.params.category);\n      });\n    } else { // this.props.match.path != \"/category=:category\"\n      filteredData = filteredData.filter((item) => {\n        let itemObjectKey = Object.keys(item);\n        let found = false;\n\n        itemObjectKey.forEach((key) => {\n          if (item[key].toLowerCase().indexOf(this.props.match.params.query.toLowerCase()) != -1) {\n            found = true;\n          }\n        });\n        return (found);\n      });\n    }\n\n    if (filteredData.length == 0) {\n      this.noResults = true;\n    } else {\n      this.noResults = false;\n    }\n\n    return (filteredData);\n  }\n\n  render() {\n    let locator = <p><Link to=\"/\">Home</Link> &gt; Search results for: {this.props.match.params.query}</p>;\n    let header = \"Search results for: \" + this.props.match.params.query;\n    if (this.props.match.path == \"/category=:category\") {\n      locator = <p><Link to=\"/\">Home</Link> &gt; {this.props.match.params.category}</p>;\n      header = this.props.match.params.category;\n    }\n    if (this.props.match.params.query == \"ALLPARTS\") {\n      header = \"All Parts\";\n      locator = <p><Link to=\"/\">Home</Link> &gt; All Parts</p>;\n    }\n\n    let items = this.generateResultsData().map((item) => {\n      return (<ItemRow key={item.Part} item={item} admin={this.props.admin} />);\n    });\n\n    let binHeader = null;\n    if (this.props.admin) {\n      binHeader = <th>Bin #</th>;\n    }\n\n    let content = null;\n    if (this.noResults) {\n      content = <p className=\"alert alert-danger text-center m-3\">No Results found</p>\n    } else {\n      content = (\n        <table className=\"table table-striped mt-3\">\n          <thead>\n            <tr>\n              {binHeader}\n              <th>ID / Part #</th>\n              <th>Description</th>\n              <th>Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items}\n          </tbody>\n        </table>\n      );\n    }\n\n    return (\n      <main className=\"container\">\n        <section id=\"search-results\">\n          {locator}\n          <SearchInput\n            changeInput={(query) => this.props.changeInput(query)}\n            inputValue={this.props.inputValue}\n            categoryInput={\"none\"}\n            path={this.props.match} />\n          <h2 className=\"text-center\">{header}</h2>\n          {content}\n        </section>\n        <ScrollUpButton />\n      </main>\n    );\n\n  }\n\n}\n\nclass ItemRow extends Component {\n\n  render() {\n    let inStock = \"\";\n    if (this.props.item.Instock == \"FALSE\") {\n      inStock = \"text-danger\";\n    }\n\n    let binInfo = null;\n    if (this.props.admin) {\n      binInfo = <td>{this.props.item.Bin}</td>;\n    }\n\n    return (\n      <tr className={inStock}>\n        {binInfo}\n        <th>{this.props.item.Part}</th>\n        <td>{this.props.item.Description}</td>\n        <td>{this.props.item.Cost}</td>\n      </tr>\n    );\n  }\n\n}\n\nclass Header extends Component {\n\n  render() {\n\n    return (\n      <header className=\"jumbotron jumbotron-fluid bg-warning text-center\">\n        <Link to=\"/\">\n          <p className=\"lead\">University of Washington</p>\n          <h1 className=\"text-center\">ECE Store Catalog</h1>\n        </Link>\n      </header>\n    );\n  }\n\n}\n\nexport class SearchInput extends Component {\n\n  render() {\n    let queryButton = null;\n    let disabled = false;\n    if (this.props.path.path == \"/\") {\n      if (this.props.categoryInput && this.props.categoryInput != \"none\") {\n        disabled = true;\n      }\n    } else {\n      if (this.props.inputValue == \"\") {\n        queryButton = (\n          <div className=\"input-group-append\">\n            <Link to={\"/searchresults=ALLPARTS\"}><button id=\"search-btn\" className=\"btn btn-outline-secondary\">Search</button></Link>\n          </div>\n        );\n      } else {\n        queryButton = (\n          <div className=\"input-group-append\">\n            <Link to={\"/searchresults=\" + this.props.inputValue}><button id=\"search-btn\" className=\"btn btn-outline-secondary\">Search</button></Link>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <label className=\"input-group-text\">Searching for</label>\n        </div>\n        <input onChange={(event) => this.props.changeInput(event.target.value)}\n          value={this.props.inputValue}\n          type=\"text\" className=\"form-control\"\n          placeholder=\"Type here\"\n          aria-label=\"search input\"\n          aria-describedby=\"search item\"\n          disabled={disabled} />\n        {queryButton}\n      </div>\n    );\n\n  }\n\n}\n\nexport class CategoryInput extends Component {\n\n  render() {\n\n    let choices = this.props.category.map((category) => {\n      return (<option key={category} value={category}>{category}</option>);\n    });\n\n    let disabled = false;\n    if (this.props.searchInput != \"\") {\n      disabled = true;\n    }\n\n    return (\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <label className=\"input-group-text\">Search by Category</label>\n        </div>\n        <select\n          onChange={(event) => this.props.changeCategory(event.target.value)}\n          value={this.props.categoryInput}\n          disabled={disabled}\n          className=\"custom-select\"\n          id=\"chooseCategory\">\n          <option value=\"none\">Choose...</option>\n          {choices}\n        </select>\n      </div>\n    );\n\n  }\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase/app';\n\nvar config = {\n    apiKey: \"AIzaSyBo1MhWiGnO2NeXB-RLn2BPgCW7R57_VxI\",\n    authDomain: \"ece-catalog.firebaseapp.com\",\n    databaseURL: \"https://ece-catalog.firebaseio.com\",\n    projectId: \"ece-catalog\",\n    storageBucket: \"ece-catalog.appspot.com\",\n    messagingSenderId: \"123150456410\"\n  };\n  firebase.initializeApp(config);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}